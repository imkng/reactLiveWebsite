{"version":3,"sources":["Components/Header.js","context/AppReducer.js","context/GlobalState.jsx","Components/Balance.jsx","Components/IncomeExpense.js","Components/Transaction.js","Components/TransactionList.js","Components/AddTransaction.jsx","App.js","index.js"],"names":["Header","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","moneyFormatter","num","p","toFixed","split","reverse","reduce","acc","i","orig","Balance","total","useContext","map","amount","item","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","event","target","placeholder","App","ReactDom","render","document","getElementById"],"mappings":"uKAEaA,EAAS,WAClB,OACI,kD,qBCaSC,EAjBG,SAACC,EAAOC,GACxB,OAAOA,EAAOC,MACZ,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAErF,IAAK,kBACH,OAAO,2BACFP,GADL,IAEEG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAE5C,QACE,OAAOH,ICTTQ,EAAe,CACnBL,aAAc,IAIHM,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,qBAAWd,EAAYS,GADH,mBACvCR,EADuC,KAChCc,EADgC,KAkB9C,OAAQ,cAACL,EAAcM,SAAf,CAAwBC,MAAO,CACrCb,aAAcH,EAAMG,aACpBc,kBAhBF,SAA2BX,GACzBQ,EAAS,CACPZ,KAAM,qBACNK,QAASD,KAcXY,eAVF,SAAwBb,GACtBS,EAAS,CACPZ,KAAM,kBACNK,QAASF,MAIL,SAKLO,KCZL,SAASO,EAAeC,GACtB,IAAIC,EAAID,EAAIE,QAAQ,GAAGC,MAAM,KAC7B,MACE,KACAF,EAAE,GACCE,MAAM,IACNC,UACAC,QAAO,SAAUC,EAAKN,EAAKO,EAAGC,GAC7B,MAAe,MAARR,EAAcM,EAAMN,IAAOO,GAAOA,EAAI,EAAW,GAAN,KAAYD,IAC7D,IACL,IACAL,EAAE,GAIC,IAAMQ,EAAU,WAAO,IAKtBC,EAJmBC,qBAAWtB,GAA5BN,aAEqB6B,KAAI,SAAA3B,GAAW,OAAIA,EAAY4B,UAEtCR,QAAO,SAACC,EAAKQ,GAAN,OAAgBR,EAAOQ,IAAO,GAE3D,OACE,qCACE,8CACF,6BAAKf,EAAeW,SC5CxB,SAASX,EAAeC,GACtB,IAAIC,EAAID,EAAIE,QAAQ,GAAGC,MAAM,KAC7B,MACE,KACAF,EAAE,GACCE,MAAM,IACNC,UACAC,QAAO,SAAUC,EAAKN,EAAKO,EAAGC,GAC7B,MAAe,MAARR,EAAcM,EAAMN,IAAOO,GAAOA,EAAI,EAAW,GAAN,KAAYD,IAC7D,IACL,IACAL,EAAE,GAIC,IAAMc,EAAiB,WAAO,IAG7BC,EAFmBL,qBAAWtB,GAA5BN,aAEqB6B,KAAI,SAAA3B,GAAW,OAAIA,EAAY4B,UAEtDI,EAASD,EACZhC,QAAO,SAAA8B,GAAI,OAAIA,EAAO,KACtBT,QAAO,SAACC,EAAKQ,GAAN,OAAgBR,EAAOQ,IAAO,GAElCI,GAEH,EADDF,EAAQhC,QAAO,SAAA8B,GAAI,OAAIA,EAAO,KAAGT,QAAO,SAACC,EAAKQ,GAAN,OAAgBR,EAAOQ,IAAO,GAIxE,OACE,sBAAKK,UAAU,oBAAf,UACI,gCACE,wCACR,mBAAGA,UAAU,aAAb,SAA2BpB,EAAekB,QAEpC,gCACE,yCACR,mBAAGE,UAAU,cAAb,SAA4BpB,EAAemB,YCtC/BE,EAAc,SAAC,GAAmB,IAAlBnC,EAAiB,EAAjBA,YACnBY,EAAqBc,qBAAWtB,GAAhCQ,kBAEAwB,EAAOpC,EAAY4B,OAAS,EAAI,IAAM,IAC5C,OACG,qBAAIM,UAAalC,EAAY4B,OAAS,EAAI,QAAU,OAApD,UACA5B,EAAYqC,KADZ,IACkB,iCAAOD,EAAP,IAAcE,KAAKC,IAAIvC,EAAY4B,WAEtD,wBAAQY,QAAW,kBAAI5B,EAAkBZ,EAAYC,KAAKiC,UAAY,mBCPhEO,EAAkB,WAAO,IAC3B3C,EAAgB4B,qBAAWtB,GAA3BN,aAEP,OACI,gCACI,yCACA,oBAAKoC,UAAY,OAAjB,SACCpC,EAAa6B,KAAK,SAAA3B,GAAW,OAC1B,cAAC,EAAD,CAAoCA,YAAeA,GAA/BA,EAAYC,aCVnCyC,EAAiB,WAAO,IAAD,EACRC,mBAAS,IADD,mBACzBN,EADyB,KACnBO,EADmB,OAEJD,mBAAS,GAFL,mBAEzBf,EAFyB,KAEjBiB,EAFiB,KAIzBhC,EAAmBa,qBAAWtB,GAA9BS,eAcP,OACI,gCACI,qDACA,uBAAMiC,SAfG,SAACC,GACdA,EAAEC,iBAEF,IAAMC,EAAiB,CACnBhD,GAAIqC,KAAKY,MAAoB,IAAdZ,KAAKa,UACpBd,OACAT,QAAWA,GAGff,EAAeoC,IAMX,UACI,sBAAKf,UAAY,eAAjB,UACI,uBAAOkB,QAAU,OAAjB,kBACA,uBAAOvD,KAAO,OAAOc,MAAS0B,EAAMgB,SAAY,SAACC,GACjDV,EAAQU,EAAMC,OAAO5C,QAClB6C,YAAc,qBAErB,sBAAKtB,UAAY,eAAjB,UACI,wBAAOkB,QAAU,SAAjB,qBAAkC,uBAAlC,8CAGA,uBAAOvD,KAAO,OAAOc,MAASiB,EAAQyB,SAAY,SAACC,GACnDT,EAAUS,EAAMC,OAAO5C,QACpB6C,YAAc,sBAErB,wBAAQtB,UAAY,MAApB,oC,MCZDuB,MAdf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAKvB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WChBRwB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.8b72f773.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n           Expense Tracker \r\n        </h2>\r\n    )\r\n}\r\n","const AppReducer =  (state, action) => {\r\n    switch(action.type) {\r\n      case 'DELETE_TRANSACTION':\r\n        return {\r\n          ...state,\r\n          transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n        }\r\n      case 'ADD_TRANSACTION':\r\n        return {\r\n          ...state,\r\n          transactions: [action.payload, ...state.transactions]\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  export default AppReducer;","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}","// import React ,{useContext}from 'react'\r\n// import { GlobalContext} from '../context/GlobalState';\r\n\r\n\r\n// export const Balance = () => {\r\n//     const {transaction} = useContext(GlobalContext);\r\n//     const amounts = transaction.map(transaction =>  transaction.amount);\r\n\r\n//     const total =  amounts.reduce((acc,item)=>(acc += item) ,0 ).toFixed(2);\r\n//     return (\r\n//         <div>\r\n//             <h4>Your Balance</h4>\r\n//             <h1 >${total}</h1>\r\n\r\n//         </div>\r\n        \r\n//     )\r\n// }\r\n\r\nimport React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  let p = num.toFixed(2).split('.');\r\n  return (\r\n    '$ ' +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]\r\n  );\r\n}\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n    <h1>{moneyFormatter(total)}</h1>\r\n    </>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  let p = num.toFixed(2).split('.');\r\n  return (\r\n    '$ ' +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]\r\n  );\r\n}\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  );\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n  <p className=\"money plus\">{moneyFormatter(income)}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n  <p className=\"money minus\">{moneyFormatter(expense)}</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}"," import React,{useContext} from 'react'\r\n import {GlobalContext} from \"../context/GlobalState\"\r\n \r\n export const Transaction = ({transaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalContext);\r\n\r\n     const sign = transaction.amount < 0 ? '-' : '+';\r\n     return (\r\n        <li className = {transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n       {transaction.text} <span>{sign}${Math.abs(transaction.amount)}\r\n       </span>\r\n       <button onClick = {()=>deleteTransaction(transaction.id)} className = \"delete-btn\"></button>\r\n        </li>\r\n     )\r\n }\r\n ","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport {Transaction} from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n    // console.log(context);\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul  className = \"list\">\r\n            {transactions.map (transaction =>(\r\n                <Transaction key = {transaction.id} transaction = {transaction} />\r\n            ))}\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useContext} from 'react'\r\nimport {GlobalContext} from \"../context/GlobalState\"\r\nexport const AddTransaction = () => {\r\n    const [text ,setText] = useState('');\r\n    const [amount ,setAmount] = useState(0);\r\n\r\n    const {addTransaction} =  useContext(GlobalContext);\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random()*100000000),\r\n            text ,\r\n            amount : + amount\r\n        }\r\n\r\n        addTransaction(newTransaction)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h3>Add New Transaction</h3>\r\n            <form onSubmit = {onSubmit}>\r\n                <div className = \"form-control\">\r\n                    <label htmlFor = \"text\">Text</label>\r\n                    <input type = \"text\" value = {text} onChange = {(event)=>{\r\n                    setText(event.target.value)\r\n                    }} placeholder = \"Enter text...\" />\r\n                </div>\r\n                <div className = \"form-control\">\r\n                    <label htmlFor = \"amount\"> Amount <br/>\r\n                    (negative - expense, positive - expense)\r\n                    </label>\r\n                    <input type = \"text\" value = {amount} onChange = {(event)=>{\r\n                    setAmount(event.target.value)\r\n                    }} placeholder = \"Enter amount..\"/>\r\n                </div>\r\n                <button className = \"btn\">Add Transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","  \r\nimport React from 'react';\r\nimport { Header } from './Components/Header';\r\nimport { Balance } from './Components/Balance';\r\nimport { IncomeExpenses } from './Components/IncomeExpense';\r\nimport { TransactionList } from './Components/TransactionList';\r\nimport { AddTransaction } from './Components/AddTransaction';\r\n\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Balance />\r\n        <IncomeExpenses />\r\n        <TransactionList />\r\n        <AddTransaction />\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react'\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />,document.getElementById(\"root\"))\n"],"sourceRoot":""}